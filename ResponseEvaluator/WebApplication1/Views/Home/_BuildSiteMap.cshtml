@model IEnumerable<WebApplication1.Models.Response>
<h2>Beta sitemap</h2>
<ul id="sitemap-ul">

    @foreach (var item in Model)
    {
        <li><a href="@item.ResponseUrl" id="@item.ResponseId">@item.ResponseUrl</a></li>
    }
</ul>


<div id="table">
    <table class="table table-bordered">
        <tr>
            <th class="tg-yw4l"></th>
            <th class="tg-yw4l">#</th>
            <th class="tg-yw4l">URL</th>
            <th class="tg-yw4l">Response time</th>
        </tr>
        <tr>

            <td class="tg-baqh" rowspan="10">
                <br />
                <br />
                Slowest responses
            </td>
            <td class="tg-baqh">1</td>
            <td class="tg-yw4l"></td>
            <td class="tg-yw4l"></td>
        </tr>
        <tr>
            <td class="tg-baqh">2</td>
            <td class="tg-baqh"></td>
            <td class="tg-baqh"></td>
        </tr>
        <tr>
            <td class="tg-baqh">3</td>
            <td class="tg-baqh"></td>
            <td class="tg-baqh"></td>
        </tr>
        <tr>
            <td class="tg-baqh">4</td>
            <td class="tg-baqh"></td>
            <td class="tg-baqh"></td>
        </tr>
        <tr>
            <td class="tg-baqh">5</td>
            <td class="tg-baqh"></td>
            <td class="tg-baqh"></td>
        </tr>
        <tr>
            <td class="tg-baqh">6</td>
            <td class="tg-baqh"></td>
            <td class="tg-baqh"></td>
        </tr>
        <tr>
            <td class="tg-baqh">7</td>
            <td class="tg-baqh"></td>
            <td class="tg-baqh"></td>
        </tr>
        <tr>
            <td class="tg-baqh">8</td>
            <td class="tg-baqh"></td>
            <td class="tg-baqh"></td>
        </tr>
        <tr>
            <td class="tg-baqh">9</td>
            <td class="tg-baqh"></td>
            <td class="tg-baqh"></td>
        </tr>
        <tr>
            <td class="tg-baqh">10</td>
            <td class="tg-baqh"></td>
            <td class="tg-baqh"></td>
        </tr>
        <tr>
            <td class="tg-baqh" colspan="2">Max</td>
            <td class="tg-yw4l"></td>
            <td class="tg-yw4l"></td>
        </tr>
        <tr>
            <td class="tg-baqh" colspan="2">Min</td>
            <td class="tg-yw4l"></td>
            <td class="tg-yw4l"></td>
        </tr>
    </table>
</div>

<script>
    $('#sitemap-ul a').click(function () {
        return false;
    });

    var responseData = @Html.Raw(Json.Encode(Model));
    var sortedResponseData = @Html.Raw(Json.Encode(Model));
    var min = {};
    var max = {};
    var tenSlowest = [];

    if (sortedResponseData.length <= 10) {
        for (var i = sortedResponseData.length - 1; i >= sortedResponseData.length - 11; i--) {
            tenSlowest.push(sortedResponseData[i]);
        }
    }

    sortedResponseData.sort(function (a, b) {
        return parseFloat(a.ResponseTime) - parseFloat(b.ResponseTime);
    });
    sortedResponseData.reverse();


    $(function () {
        $('#ContainerAll').highcharts({
            chart: {
                renderTo: 'ContainerAll',
                type: 'column'
            },
            title: {
                text: 'Response time for all site map items'
            },
            subtitle: {
                text: 'Beta response time chart'
            },
            xAxis: {
                categories: responseData.map(function(a) {return a.ResponseUrl;})
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Response time (ms)'
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [{
                name: responseData[0].Host,
                data: responseData.map(function(a) {return a.ResponseTime;})
            }]
        });
    });



    max = { url: sortedResponseData[0].ResponseUrl, response: sortedResponseData[0].ResponseTime};
    min = { url: sortedResponseData[sortedResponseData.length - 1].ResponseUrl, response: sortedResponseData[sortedResponseData.length - 1].ResponseTime};
    $(function () {
        $('#ContainerMinMax').highcharts({
            chart: {
                renderTo: 'ContainerMinMax',
                type: 'column'
            },
            title: {
                text: 'Mininmum and maximum response time'
            },
            subtitle: {
                text: 'Beta response time chart'
            },
            xAxis: {
                categories: [
                    'min/max'
                ]
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Rainfall (mm)'
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [{
                name: min.url,
                data: [min.response]
            }, {
                name: max.url,
                data: [max.response]
            }]
        });
    });

    $(function () {
        $('#ContainerTenSlowest').highcharts({
            chart: {
                renderTo: 'ContainerTenSlowest',
                type: 'column'
            },
            title: {
                text: 'Ten the slowest pages'
            },
            subtitle: {
                text: 'Beta response time chart'
            },
            xAxis: {
                categories:  sortedResponseData.map(function(a) {return a.ResponseUrl;})
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Rainfall (mm)'
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [{
                name: sortedResponseData[0].Host,
                data: sortedResponseData.map(function(a) {return a.ResponseTime;})
            }]
        });
    });

    //fill in table

    $('#table td')[$('#table td').length-1].innerText = min.response; //min
    $('#table td')[$('#table td').length-2].innerText = min.url;

    $('#table td')[$('#table td').length-4].innerText = max.response; //max
    $('#table td')[$('#table td').length-5].innerText = max.url;



    for (var i = 2, j = 0; i < $('#table td').length; i+=2, j++) {
        if (i >= 30) {
            break;
        }
        $('#table td')[i].innerText = sortedResponseData[j].ResponseUrl;
        i++;
        $('#table td')[i].innerText = sortedResponseData[j].ResponseTime;
    }
</script>

